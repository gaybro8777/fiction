// Generated by CoffeeScript 1.9.1
var createNode, fiction, htmlparser, marked;

marked = require('marked');

htmlparser = require('htmlparser2');

marked.setOptions({
  smartypants: true
});

createNode = function(title) {
  return {
    title: title,
    children: []
  };
};

fiction = function(markdown) {
  var _depth, _hierarchy, _inHeading, _level, _text, parser;
  _level = 0;
  _depth = 0;
  _hierarchy = [createNode('')];
  _inHeading = false;
  _text = '';
  parser = new htmlparser.Parser({
    onopentag: function(name, attrs) {
      switch (name) {
        case 'h1':
        case 'h2':
        case 'h3':
        case 'h4':
        case 'h5':
        case 'h6':
          _inHeading = true;
          _text = '';
      }
    },
    ontext: function(text) {
      if (_inHeading) {
        _text += text;
      }
    },
    onclosetag: function(name) {
      var level;
      switch (name) {
        case 'h1':
        case 'h2':
        case 'h3':
        case 'h4':
        case 'h5':
        case 'h6':
          level = parseInt(name[1], 10);
          if (level < _level) {
            _depth -= _level - level;
            _level = level;
          } else if (level > _level) {
            if (1 !== level - _level) {
              throw new Error("Invalid nesting detected at heading " + level + ": " + _text);
            } else {
              _depth++;
              _level = level;
            }
          }
          _hierarchy[_depth - 1].children.push(_hierarchy[_depth] = createNode(_text));
          _inHeading = false;
      }
    }
  });
  parser.write(marked(markdown));
  parser.end();
  return _hierarchy[0].children;
};

module.exports = fiction;
